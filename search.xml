<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python tcp]]></title>
    <url>%2F2019%2F04%2F02%2Fpython-tcp%2F</url>
    <content type="text"><![CDATA[TCPtcp_client.py12345678910111213import socketimport threadings = socket.socket(socket.AF_INET, socket.SOCK_STREAM)# 建立连接:s.connect(('127.0.0.1', 10000))# 接收欢迎消息:print(s.recv(1024).decode('utf-8'))for data in [b'Michael', b'Tracy', b'Sarah']: # 发送数据: s.send(data) print(s.recv(1024).decode('utf-8'))s.send(b'exit')s.close() tcp_server.py 12345678910111213141516171819202122232425import socket,osimport threadingimport times=socket.socket(socket.AF_INET,socket.SOCK_STREAM) #创建连接s.bind(('127.0.0.1',10000)) #设置服务器端口,小于1024的端口需要权限s.listen(3) #设置连接数限制print('等待连接...')def tcplink(sock, addr): print('Accept new connection from %s:%s...' % addr) sock.send(b'Welcome!') while True: data = sock.recv(1024) time.sleep(1) if not data or data.decode('utf-8') == 'exit': break sock.send(('Hello, %s!' % data.decode('utf-8')).encode('utf-8')) sock.close() print('Connection from %s:%s closed.' % addr)while True: sock ,addr=s.accept() t=threading.Thread(target=tcplink,args=(sock,addr)) t.start() UDPudp_client.py123456789import sockets = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)for data in [b'Michael', b'Tracy', b'Sarah']: # 发送数据: s.sendto(data, ('127.0.0.1', 9999)) # 接收数据: print(s.recv(1024).decode('utf-8'))s.close() udp_server.py1234567891011121314import socket,osimport threadingimport times = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)# 绑定端口:s.bind(('127.0.0.1', 9999))print('waiting for connecting..')while True: # 接收数据: data, addr = s.recvfrom(1024) print('Received from %s:%s.' % addr) s.sendto(b'Hello, %s!' % data, addr)]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日本語学习笔记]]></title>
    <url>%2F2019%2F04%2F01%2F%E6%97%A5%E6%9C%AC%E8%AA%9E%2F</url>
    <content type="text"><![CDATA[日语有五个主要词类：名词动词性名词（也称サ变名词，对应于英语动名词像“studying”、“jumping”，表示活动）形容动词（な形容词）动词形容词（所谓的い形容词）更广泛的有两类：体言（即不能活用的词，名词，包括动名词和形容动词）与用言（即能够活用的词，动词以及作为不完全变化动词的形容词）。准确地说，动名词是可以附加「する」 suru（做）的名词，而形容动词像名词，但是作定语的时候后面使用「〜な」 -na而不是「〜の」 -no。形容词（い形容词）与动词以na-i（ない）结尾的否定形式变化相同。比较「食べない」 tabe-na-i（不吃） → 「食べなかった」 tabe-na-katta（没吃）与「熱い」 atsu-i（热） → 「熱かった」 atsu-katta（曾经热）。 句子结构英语和汉语造句使用“I read a book”、“我读书”这样的语序，称之为主谓宾结构，而日语造句使用“私は本を読む。”【私我は［主题标记］本书を［宾格标记］読む读。】这样的语序，称作主宾谓结构（不过日语用宾主谓也可以，因为日语是黏着语，而非孤立语）严格说来，英语句子必须要有动词，日语句子却可以用动词结尾也可以用形容词或者名词+助动词结尾。因此，与其说日语语句的基本结构是“S（主语subject）—V（动词verb）”，倒不如说是“S（主语）—P（谓语predicate）”这一“主谓结构”更为合适。 \1. 私は（が） 社長だ。【私我は（が）［主题（主格）标记］社長社长だ是（简体[注 12]）。】（我是社长。） \2. 私は（が） 行く。【私我は（が）［主题（主格）标记］行く去。】（我去。） \3. 私は（が） 嬉しい。【私我は（が）［主题（主格）标记］嬉しい高兴。】（我很高兴。） 上述句子都属于“S—P”结构（主谓结构）。在英语中它们分别成“SVC”、“SV”、“SVC”结构，因此分别称1为名词句，2为动词句，3为形容词句。可是在日语中这三种结构没有本质上的区别。因此，刚刚开始学习英语的人，可能会仿造“I am happy.”的形式造出“I am go.”这样的病句[50]。 题述结构此外，日语句子中除了主谓结构之外，还有很多句子采用“题述结构”，由“题目＋叙述部分”构成。题目指的是一句话的主题（三上章称其为”what we are talking about”[51]），和“主语”是两个不同的概念。主语多用“が”标示，是动作和作用的主体，而题目常用“は”标示，展现的是句子叙述的中心。当一个句子的题目同时也是主语的时候，题目后标示了“は”就不用再标示“が”，究其结果也就成主语后标示“は”了；而题目同时为宾语也不用再标示“を”，只用标示“は”。例如： \4. 象は 大きい。【象大象は［主题标记］大きい大。】（大象大。） \5. 象は 檻に入れた。【象大象は［主题标记］檻笼子に［与格标记］入れた放入了。】（把大象塞进笼子了。） \6. 象は 餌をやった。【象大象は［主题标记］餌饵食を［宾格标记］やった喂过了。】（给大象喂过食了。） \7. 象は 鼻が長い。【象大象は［主题标记］鼻鼻子が［主格标记］長い长。】（大象鼻子长。） 之类的句子中，“象は”在每个句子里都是题目。第4句中的“象は”可以替换为“象が”，因为此句的主题兼任主语。可是，第5句以后的“象は”不能替换为“象が”。第5句可以替换为“象を”，第6句可以替换为“象に”，至于第7句则没有替换词（有人认为可以替换成“象の”[52]，相当于句子改写成“大象的鼻子长”）。这些句子里的“象は”这个题目并不表示特定的格)，只是表示我现在要讨论和大象相关的问题。 这些句子中接续在“象は”这个题目后面的都是“叙述部分”[注 13]。 大野晋认为，“が”和“は”分别表示的是未知和已知。例如 私が佐藤です（我是佐藤） 私は佐藤です（我是佐藤） 中，前者意味着“（谁是佐藤呢？）我是佐藤”（已知佐藤而不知“我”），而后者意味着“（我是什么人呢？）我是佐藤”（已知“我”而不知佐藤）。因此，日语里“何”、“どこ”、“いつ”这些疑问词总是后接“が”变为“何が”、“どこが”、“いつが”而不会变成“何は”、“どこは”、“いつは”，因为它们总是表示未知的事物。 像日语这样拥有题述结构的句子的语言，称之为话题优先语言。有些东亚语言，例如汉语、朝鲜语、越南语、马来语、他加禄语，也拥有这种句式。 句子成分[编辑]即使是认为有主语和谓语就有句子的人，也没法只用这两个要素就说明句子的结构。在主语、谓语之外，还需要加上修饰语等成分，才形成复杂的语句。使得句子得以成立的这些成分称作“句子成分”。 学校语法[注 16]把句子成分分为“主语”、“谓语”、“修饰语（连用修饰语、连体修饰语）”、“接续语”、“独立语”[注 17]五种。在学校语法中，“并列语（互相并列的文节、连文节）”（「並立語（並立の関係にある文節/連文節どうし）」）[注 18]和“补语、被补语（互为补充关系的文节、连文节）”「補助語・被補助語（補助の関係にある文節/連文節どうし）」都不是句子成分，而是表达文节之间、连文节之间关系的概念，因而总是形成连文节变成上述五种成分之一。于是教科书随之采用“并列关系”、“补助关系”这样的用语（概念），而很少有教科书使用“并列语”、“补助语”的概念。此外，“连体修饰语”原则上不能单独充当成分，总是要和被修饰语在一起才能构成连文节充当句子成分。 除学校图书（出版社）之外的其他四家出版社的教科书中，都把能单独构成文节的成分像“主语”那样称作“╳语”，把构成连文节的成分像“主部”那样称作“╳部”。只有学校图书把文节和连文节都称作“╳语”，而把一个句子中能划分成的最大部件称之为“╳部”。 主语、谓语[编辑]造句子所需的基本成分。其中谓语尤为重要，在句子中起到纲举目张的作用。“雨が降る。”、“本が多い。”、“私は学生だ。”[译 1]都是由主语和谓语构成的句子。有的教科书中强调谓语统合全文的作用，而把主语放在修饰语中加以解说（参见上一节主语废止论）。 连用修饰语[编辑]和用言相联的修饰语（用言的意思请参照自立语）一节。“兄が弟に算数を教える。”[译 2]一文中“弟に”、“算数を”等表示格的部分，就是和谓语动词“教える”相联的连用修饰语。此外，“算数をみっちり教える。”、“算数を熱心に教える。”[译 3]等句中的“みっちり”、“熱心に”[译 4]等词也是和“教える”相联的连用修饰语。不过，如果缺乏了“弟に”、“算数を”[译 5]等词的话，整个句子就会变得不知所云，而“みっちり”、“熱心に”[译 6]等词即使缺少了，也还是个能传达信息的完整的句子。因此，有人认为前者为句子的主干，应称为补充成分，而后者应称为修饰成分[54]。有的国语教科书里对这两者有区分。 连体修饰语[编辑]和体言相联的修饰语（体言的意思请参照自立语）一节。“私の本”、“動く歩道”、“赤い髪飾り”、“大きな瞳”[译 7]中的“私の”、“動く”、“赤い”、“大きな”[译 8]为连体修饰语。铃木重信、铃木康之、高桥太郎、铃木泰等人认为，连体修饰语赋予“表现事物的句子成分”以特征，是一种规定“该事物是什么样的事物”的句子成分，因而把连体修饰语称作“规定语”（或者“连体规定语”）。 接续语[编辑]像“疲れたので、動けない。”、“買いたいが、金がない。”[译 9]中的“疲れたので”、“買いたいが”[译 10]那样，和后续部分有逻辑关系的语。此外，像“今日は晴れた。だから、ピクニックに行こう。”、“君は若い。なのに、なぜ絶望するのか。”[译 11]中的“だから”、“なのに”[译 12]那样连接前文和后文的成分也属于接续语。在词类中，总是用作接续语的词的词性为接续词。 独立语[编辑]独立语像“はい、分かりました。”、“お兄さん、どこへ行くの。”[译 13]中的“はい”、“お兄さん”[译 14]那样，并不和其他成分相联，也不被其他成分相联。从是否和其他词相联这一定义来看，独立语几乎都是一些表示感动、发动号召、应答、提示的语言。在词类中，总是用作独立语的词的词性为感叹词。 并列语[编辑]在“ミカンとリンゴを買う。”、“北海道の冬は冷たくて厳しい。”[译 15]中，“ミカンとリンゴを”[译 16]和“冷たくて厳しい。”[译 17]均是由两个互相并列的成分构成。作为一个整体，“ミカンとリンゴを”相当于连用修饰部，“冷たくて厳しい。”相当于谓部。 宾语和补语[编辑]现在通行的学校语法中并无相当于英语语法中“宾语”、“补语”的概念。英语语法把“I read a book.”中的“a book”看作宾语，为主谓宾结构的一部分；此外，“I go to the library.”中的“the library”则是看作和前置词一并加入的修饰语。与之相对，日语则是像 私は本を読む。（我读书。） 私は図書館へ行く。（我去图书馆。） 这样，不论是“本を”[译 18]还是“図書館へ”[译 19]，都是“名词＋格助词”的结构，没区别，因而都被视作“连用修饰语”这个句子成分。按照学校语法，“私は本を読む。”[译 20]不用“主语＋宾语＋动词”（SOV）句型解释，而用“主语＋修饰语＋谓语”来解释。 对象语（补语）[编辑]铃木重幸、铃木康之等人认为，“连用修饰语”中属于“宾语”的语，是说明谓语所要描述的动作和状态所不可或缺的“对象语”（Object）[55]。承认它属于句子的基本成分。高桥太郎、铃木泰、工藤真由美等则是把相当于“对象语”的成分称作“补语”，认为它对于主语和谓语所描写的事情起到补充说明的效果。 状况语[编辑]像“明日、町で祭がある。”[译 21]“雨だから、傘を持とう。”[译 22]中的“明日”、“町で”、“雨だから”[译 23]那样，叙述事件发生的时间、场所、原因、目的的句子成分叫做“状况语”[56]。在学校语法中属于“连用修饰语”，但是，“（连用）修饰语”表达的是谓语的内部属性，而“状况语”表达的是外部状况，起的是锦上添花的作用。汉语有“状语”的概念[注 19]，但是内涵和外延与日语的“状况语”不完全一致，日语的“修饰语”在汉语里也是“状语”。 修饰语的特征[编辑]日语的修饰语总在被修饰语的前面。“ぐんぐん進む”、“白い雲”[译 24]中的“ぐんぐん”、“白い”[译 25]分别是“進む”、“雲”[译 26]的修饰语。日语的修饰语可以变得很长，不过还是前置，例如： ゆく秋の大和の国の薬師寺の塔の上なるひとひらの雲（硬译以展现日语句子结构：到了秋天的大和国的药师寺塔上的一片云）— 佐佐木信纲 这一短歌中，从句子开头到“雲”之前的一大串内容都是“雲”的修饰语。 在法律条文和译文中，常常出现主语和谓语之间夹着一个长长的修饰语，让人很难一下子看清文意。例如，《日本国宪法》（原文为旧字旧假名，此处保留原表记）中有这样一节： 日语原文：日本國民は、正義と秩序を基調とする國際平和を誠實に希求し、國權の發動たる戰爭と、武力による威嚇又は武力の行使は、國際紛爭を解決する手段としては、永久にこれを放棄する。 中文翻译：日本国民衷心谋求基于正义与秩序的国际和平，永远放弃以国权发动的战争、武力威胁或武力行使作为解决国际争端的手段。 英文翻译：Aspiring sincerely to an international peace based on justice and order, the Japanese people forever renounce war as a sovereign right of the nation and the threat or use of force as means of settling international disputes. ──《日本国宪法》第九条第1款 在作为主语（题目）的“日本國民”和谓语“放棄する”之间，隔了好长的一个修饰语；如果不是读惯这种句子的人，可能一下子读不清楚。这与英语the Japanese people后面马上接renounce正好形成对照。 不过，修饰语后置的英语也有时候会出现修饰语弄得句子很难懂的例子，西方人称作”Garden path sentence”（日语：袋小路文，中文：园径句型[57]）： 英文：The horse raced past the barn fell. 日译：納屋のそばを走らされた馬が倒れた。 中译：跑过牲口棚的马倒了下去。（更好的翻译：马跑过牲口棚，便倒了下去。） 这个日语句子中和“马”相联的连体修饰语“納屋のそばを走らされた”在“马”之前，因此不容易误解，但是英语里修饰“The horse”的“raced past the barn”在“The horse”后面，这导致误解──英文版也可以读作“马跑过了倒塌的牲口棚。” 摘抄自：https://zh.wikipedia.org/wiki/%E6%97%A5%E8%AF%AD]]></content>
      <categories>
        <category>learning</category>
      </categories>
      <tags>
        <tag>janpanese</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[史上最好用的rss订阅器—inoreader]]></title>
    <url>%2F2019%2F04%2F01%2F%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84rss%E8%AE%A2%E9%98%85%E5%99%A8%E2%80%94inoreader%2F</url>
    <content type="text"><![CDATA[inoreader是保加利亚一款基于网络内容和云服务的RSS聚合器，且支持移动设备Android和iOS端。它以统一的布局为用户编排整理定制来自在线资源的新闻源，并可与他人分享。[2]由Innologica于2013年首次发布。 获取喜马拉雅rss 首先获取到播客专辑的网址，例如 http://m.ximalaya.com/album/231594 的rss地址是去掉’m.’后加上./xml: http://ximalaya.com/album/231594.xml 然后把获取到的链接添加到inoreader，就可以在inoreader订阅更新最近的节目了 其他平台rss获取可以参考这篇文章：如何获取喜马拉雅、荔枝FM、考拉FM等中文播客RSS源]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>rss inoreader</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用hexo搭建个人博客]]></title>
    <url>%2F2019%2F03%2F31%2F%E5%88%A9%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo简介Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。先安装nodejs,windows系统的百度下载安装包安装nodejs,linux: 12sudo apt-get install nodejssudo apt-get install npm 检查安装是否成功： 12node -vnpm -v 教程分三个部分: 第一部分：hexo的初级搭建以及常见错误的解决方法 第二部分：hexo的基本配置，更换主题，以及相关美化 第三部分：hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等 第一部分hexo的初级搭建还有部署到github page上，以及个人域名的绑定。 安装Hexo 发布文章 1.安装Hexo1npm install -g hexo-cli 安装完成以后使用 hexo -v查看是否安装成功 然后创建博客 1hexo init blog 上面的blog就博客的根文件，名字可以自己随便取一个。创建成功以后进入blog文件夹,安装npm插件 12cd ./blognpm install 在linux系统中安装插件需要给npm赋予权限： 12sudo chown -R $USER:$GROUP ~/.npmsudo chown -R $USER:$GROUP ~/.config 安装完成以后，文件内各文件夹的作用： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 _config.yml: 博客的配置文件 hexo 常用命令: 12345hexo generate //生成静态文件hexo clean //删除静态文件以及缓存hexo deploy //部署hexo init //创建一个新的hexo文件夹hexo publish //发布文章 启动hexo server: 12hexo ghexo server 启动hexo时常见错误：1. 执行命令hexo server， 提示找不到该指令解决方法: 在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：npm install hexo-server –save 安装此server后再试，问题解决。 2.端口已被占用解决方法：更换端口 hexo s -pid pid为需要更换成其他的端口 3 YAMLException: incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line x ,column y解决方案： （1）出现这种情况，一般都是缺少空格，在:冒号之后要有空格！检查x行y列附近的冒号，其之后是否跟了空格。 （2）仔细检查_config.yml文件中所有冒号后面的空格，格式很严格，必须是只有一个，半角。不管是多了还是少了都会报错，这是yml解释器所定义的语法。 ２．主题安装hexo官网提供了很多主题，不过常用的就这么几个。这里安装的时非常流行的Next主题： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 下载好以后解压到博客的theme文件夹下,修改博客站点配置文件_config.yml 注意:冒号后一定要有一个空格，不要会报错。]]></content>
      <categories>
        <category>hexo_categories</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
